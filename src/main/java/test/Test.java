package test;

public class Test {
    public static void main(String[] args) {
        /*
            KnapsackProblem
            CycleLinkedList
            LongestIncreasingPathInMatrix
            DiskStacking
            LargestRange
            LowestCommonAncestorOfBinaryTree
            SelectSort
            TopKFrequentWords
            ReverseBinaryTree
            PhoneNumberMnemonic
            FourSum
            NumberOfWaysToMakeChange
            WordSearch
            ClimbingStairs
            NextGreaterElement
            RegularExpressionMatch
            ConvertedSortedArrayToBST
            FirstDuplicateValue
            WordBreak
            SearchForRange
            StaircaseTraversal
            SortKSortedArray
            KruskalMinSpanningTree
            ReverseInteger
            TopologicalSortDFSCycleGraphAsMap
            DijkstraShortestPaths
            PalindromicSubstrings
            RotateImage
            SortList
            Pow
            ReverseString
            MaximumSubarray
            ThreeSum
            BalancedBrackets
            Permutations
            LeftViewBinaryTree
            SearchInRotatedSortedArray
            SurroundedRegions
            SpiralMatrixTraverse
            ProductOfArrayExceptSelf
            DeleteNodeInLinkedList
            ReverseWordsInString
            RemoveNthNodeFromEndOfList
            MinRewards
            IntersectionLinkedList
            LRUCache
            MergeSort
            MinNumberOfJumps
            CloneGraph
            MinHeap
            MinNumberOfCoinsForChange
            QuickSort
            Powerset
            AddTwoNumbers
            MergeIntervals
            RiverSizes
            Sqrt
            CountingSort
            DFSTreeTraverseRec
            SubarraySort
            BreadthSearchFirst
            ValidateStartingCity
            HouseRobber
            WordLadder
            StringWithoutAAAorBBB
            BFSTreeTraverse
            UniquePaths
            ValidIPAddress
            PopulatingNextRightPointerInEachNode
            MedianOfTwoSortedArrays
            DepthFirstSearch
            BinaryTreeZigzagLevelOrderTraverse
            ConstructBinaryTreeFromPreorderAndInorderTraversal
            ReverseLinkedList
            LevenshteinDistance
            NodeDepths
            ReconstructBST
            BalancedBinaryTree
            BinaryTreeDiameter
            KthSmallestElementInArray
            BestTimeToBuyAndSellStock
            BinarySearch
            SameBSTs
            BSTSuccessorSearch
            WaterArea
            CombinationSum
            LongestCommonSubsequence
            LowestCommonAncestorOfBinarySearchTree
            LongestIncrSubSeq
            ValidateBinarySearchTree
            AStarAlgo
            SameTree
            SparseMatrixMultiplication
            MinimumPassesOfMatrix
            HeapSort
            FindNodesDistanceK
            LongestDecrSubseq
            MaxSumIncreasingSubsequence
            BellmanFord
            BranchSums
            FirstPermutationIsSubstrSecondStr
            GenerateParentheses
            PrimMinSpanningTree
            FindClosestValueInBST
            ZigZagTraverse
            PalindromeLinkedList
            MaxPathSumInBinaryTree
            TopologicalSortDFSCycleGraph
            MinimumWindowSubstring
            InsertSort
            SymmetricTree
            SubarraySumEqualsK
            LongestNonDecrSubseq
            StringPermutation
            FirstUniqueCharacterInString
            DFSTreeTraverse
         */
    }
}